name: Build & Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write    # GHCR için gerekli
  id-token: write    # (ileride OIDC ile bulut login vs. için işimize yarar)

env:
  IMAGE_NAME: myapp                # İmaj adı (ör: "api" veya proje adı)
  DOCKERFILE_PATH: ./Dockerfile    # Farklı dizindeyse güncelle
  CONTEXT: .                       # Build context

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch       # main -> :main
            type=ref,event=tag          # v1.2.3 -> :v1.2.3
            type=sha,format=short       # :sha-abc123
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (multi-tag, cache’li)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          # Çoklu mimari istersen şunu aç: platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
